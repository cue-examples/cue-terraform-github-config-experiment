# Code generated by generate_tool.cue - DO NOT EDIT.
name: Detect drift
"on":
  schedule:
    - cron: 30 7 * * 1-5
  workflow_dispatch: {}
jobs:
  Alert:
    name: Report drift
    needs:
      - Drift-fictional-meme
      - Drift-supreme-octo-enigma
    if: ${{ failure() }}
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: .
    steps:
      - name: Notify Discord
        if: ${{ always() }}
        run: |-
          curl \
            --no-progress-meter \
            -d content=":x: Infrastructure drift detected: [Workflow]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" \
            -d username="Github Actions" \
            "https://discord.com/api/webhooks/1086214516129398814/${{ secrets.DISCORD_WEBHOOK_TOKEN }}"
      - name: Notify Email
        if: ${{ always() }}
        run: |-
          sudo apt-get install -qq swaks
          swaks \
            -tls \
            --server smtp.gmail.com:587 \
            --auth   LOGIN \
            --auth-user     "${{ secrets.GOOGLE_SMTP_USERNAME }}" \
            --auth-password "${{ secrets.GOOGLE_SMTP_PASSWORD }}" \
            --h-Subject "Infrastructure drift detected" \
            --body      "Infrastructure drift detected: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            --to "cue-terraform-github-config-experiment-controller+notifications@cue.works"
    env:
      CUE_DEBUG_SCRIPTS: ${{ vars.CUE_DEBUG_SCRIPTS }}
  Drift-fictional-meme:
    name: 'Detect drift: fictional-meme'
    runs-on: ubuntu-20.04
    concurrency: terraform-state-lock-org_fictional-meme
    permissions:
      contents: read
    defaults:
      run:
        working-directory: .
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        if: ${{ success() }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}
          terraform_wrapper: false
        if: ${{ success() }}
      - name: Initialize Terraform state/plugins/backend
        run: make ci_tf_init ORG=fictional-meme
        if: ${{ success() }}
      - name: Detect drift
        env:
          TF_VAR_provider_github_token: ${{ secrets.GH_API_TOKEN }}
        run: make ci_tf_plan ORG=fictional-meme DRIFT_DETECTION=1
        if: ${{ success() }}
    env:
      CUE_DEBUG_SCRIPTS: ${{ vars.CUE_DEBUG_SCRIPTS }}
  Drift-supreme-octo-enigma:
    name: 'Detect drift: supreme-octo-enigma'
    runs-on: ubuntu-20.04
    concurrency: terraform-state-lock-org_supreme-octo-enigma
    permissions:
      contents: read
    defaults:
      run:
        working-directory: .
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        if: ${{ success() }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}
          terraform_wrapper: false
        if: ${{ success() }}
      - name: Initialize Terraform state/plugins/backend
        run: make ci_tf_init ORG=supreme-octo-enigma
        if: ${{ success() }}
      - name: Detect drift
        env:
          TF_VAR_provider_github_token: ${{ secrets.GH_API_TOKEN }}
        run: make ci_tf_plan ORG=supreme-octo-enigma DRIFT_DETECTION=1
        if: ${{ success() }}
    env:
      CUE_DEBUG_SCRIPTS: ${{ vars.CUE_DEBUG_SCRIPTS }}
env:
  TF_IN_AUTOMATION: yes it is
  TF_INPUT: 0
concurrency:
  group: terraform-state-lock
  cancel-in-progress: false
